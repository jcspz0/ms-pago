services:
  front:
    image: jcspz0/ms-pago-web:1.0
    container_name: ms-pago-web
    build:
      context: .
      dockerfile: ./Dockerfile-front
    ports:
      - 4000:4000
    environment:
      - API_HOST=http://174.138.33.113
      - API_PORT=8081
    depends_on:
      - backend
  backend:
    image: jcspz0/ms-pago-service:1.0
    container_name: ms-pago-service
    build:
      context: .
      dockerfile: ./Dockerfile-back
    ports:
      - 8081:8081
    restart: always
    environment:
      - ENV_MYSQL_HOST=ms-pago-db 
      - ENV_MYSQL_PORT=3308 
      - ENV_MYSQL_DB=jcdb 
      - ENV_MYSQL_USER=jcspz0 
      - ENV_MYSQL_PASS=juancarlos 
      - ENV_APP_PORT=8081 
      - ENV_AMQP_HOST=159.223.144.204 
      - ENV_AMQP_PORT=5672 
      - ENV_AMQP_USER=guest 
      - ENV_AMQP_PASS=guest 
    depends_on:
      db:
        condition: service_healthy
  db:
    image: mysql:8.0.29
    container_name: ms-pago-db
    ports:
      - 3308:3308
    environment:
      - MYSQL_ROOT_PASSWORD=passroot
      - MYSQL_DATABASE=jcdb
      - MYSQL_USER=jcspz0
      - MYSQL_PASSWORD=juancarlos
      - MYSQL_TCP_PORT=3308 
    volumes:
      - mysql-data-pago:/var/lib/mysql
    healthcheck:
            test: ["CMD-SHELL", "mysqladmin --user=$${MYSQL_USER} --password=$${MYSQL_PASSWORD} ping"]
            interval: 10s
            timeout: 2s
            retries: 1000
volumes:
  mysql-data-pago:

